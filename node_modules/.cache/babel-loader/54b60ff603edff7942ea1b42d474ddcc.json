{"remainingRequest":"E:\\zhongqiyan\\Material-Select-Web\\node_modules\\babel-loader\\lib\\index.js!E:\\zhongqiyan\\Material-Select-Web\\node_modules\\eslint-loader\\index.js??ref--13-0!E:\\zhongqiyan\\Material-Select-Web\\src\\assets\\api\\request.js","dependencies":[{"path":"E:\\zhongqiyan\\Material-Select-Web\\src\\assets\\api\\request.js","mtime":1591943826212},{"path":"E:\\zhongqiyan\\Material-Select-Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\zhongqiyan\\Material-Select-Web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\zhongqiyan\\Material-Select-Web\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IGh0dHBSZXF1ZXN0IGZyb20gJy4vaHR0cFJlcXVlc3QnOwpleHBvcnQgZGVmYXVsdCB7CiAgZ2V0OiBmdW5jdGlvbiBnZXQodXJsLCBvcHRpb25zLCBzdWNjZXNzLCBlcnJvcikgewogICAgaHR0cFJlcXVlc3QuZ2V0KHVybCwgb3B0aW9ucykudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgIHN1Y2Nlc3MgJiYgc3VjY2VzcyhyZXMpOwogICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycikgewogICAgICBlcnJvciAmJiBlcnJvcihlcnIpOwogICAgfSk7CiAgfSwKICBwb3N0OiBmdW5jdGlvbiBwb3N0KHVybCwgb3B0aW9ucywgc3VjY2VzcywgZXJyb3IpIHsKICAgIGh0dHBSZXF1ZXN0LnBvc3QodXJsLCBvcHRpb25zKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgc3VjY2VzcyAmJiBzdWNjZXNzKHJlcyk7CiAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyKSB7CiAgICAgIGVycm9yICYmIGVycm9yKGVycik7CiAgICB9KTsKICB9LAogIHBvc3RGaWxlOiBmdW5jdGlvbiBwb3N0RmlsZSh1cmwsIG9wdGlvbnMsIHN1Y2Nlc3MsIGVycm9yKSB7CiAgICBodHRwUmVxdWVzdC5wb3N0KHVybCwgb3B0aW9ucykudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgIHN1Y2Nlc3MgJiYgc3VjY2VzcyhyZXMpOwogICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycikgewogICAgICBlcnJvciAmJiBlcnJvcihlcnIpOwogICAgfSk7CiAgfSwKICBwdXQ6IGZ1bmN0aW9uIHB1dCh1cmwsIG9wdGlvbnMsIHN1Y2Nlc3MsIGVycm9yKSB7CiAgICBodHRwUmVxdWVzdC5wdXQodXJsLCBvcHRpb25zKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgc3VjY2VzcyAmJiBzdWNjZXNzKHJlcyk7CiAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyKSB7CiAgICAgIGVycm9yICYmIGVycm9yKGVycik7CiAgICB9KTsKICB9Cn07"},{"version":3,"sources":["E:/zhongqiyan/Material-Select-Web/src/assets/api/request.js"],"names":["httpRequest","get","url","options","success","error","then","res","catch","err","post","postFile","put"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,eAAxB;AAEA,eAAe;AAEbC,EAAAA,GAFa,eAERC,GAFQ,EAEHC,OAFG,EAEMC,OAFN,EAEeC,KAFf,EAEsB;AACjCL,IAAAA,WAAW,CAACC,GAAZ,CAAgBC,GAAhB,EAAqBC,OAArB,EAA8BG,IAA9B,CAAmC,UAAAC,GAAG,EAAI;AACxCH,MAAAA,OAAO,IAAIA,OAAO,CAACG,GAAD,CAAlB;AACD,KAFD,EAEGC,KAFH,CAES,UAAAC,GAAG,EAAI;AACdJ,MAAAA,KAAK,IAAIA,KAAK,CAACI,GAAD,CAAd;AACD,KAJD;AAKD,GARY;AASbC,EAAAA,IATa,gBASPR,GATO,EASFC,OATE,EASOC,OATP,EASgBC,KAThB,EASuB;AAClCL,IAAAA,WAAW,CAACU,IAAZ,CAAiBR,GAAjB,EAAsBC,OAAtB,EAA+BG,IAA/B,CAAoC,UAAAC,GAAG,EAAI;AACzCH,MAAAA,OAAO,IAAIA,OAAO,CAACG,GAAD,CAAlB;AACD,KAFD,EAEGC,KAFH,CAES,UAAAC,GAAG,EAAI;AACdJ,MAAAA,KAAK,IAAIA,KAAK,CAACI,GAAD,CAAd;AACD,KAJD;AAKD,GAfY;AAgBbE,EAAAA,QAhBa,oBAgBHT,GAhBG,EAgBEC,OAhBF,EAgBWC,OAhBX,EAgBoBC,KAhBpB,EAgB2B;AACtCL,IAAAA,WAAW,CAACU,IAAZ,CAAiBR,GAAjB,EAAsBC,OAAtB,EAA+BG,IAA/B,CAAoC,UAAAC,GAAG,EAAI;AACzCH,MAAAA,OAAO,IAAIA,OAAO,CAACG,GAAD,CAAlB;AACD,KAFD,EAEGC,KAFH,CAES,UAAAC,GAAG,EAAI;AACdJ,MAAAA,KAAK,IAAIA,KAAK,CAACI,GAAD,CAAd;AACD,KAJD;AAKD,GAtBY;AAuBbG,EAAAA,GAvBa,eAuBRV,GAvBQ,EAuBHC,OAvBG,EAuBMC,OAvBN,EAuBeC,KAvBf,EAuBsB;AACjCL,IAAAA,WAAW,CAACY,GAAZ,CAAgBV,GAAhB,EAAqBC,OAArB,EAA8BG,IAA9B,CAAmC,UAAAC,GAAG,EAAI;AACxCH,MAAAA,OAAO,IAAIA,OAAO,CAACG,GAAD,CAAlB;AACD,KAFD,EAEGC,KAFH,CAES,UAAAC,GAAG,EAAI;AACdJ,MAAAA,KAAK,IAAIA,KAAK,CAACI,GAAD,CAAd;AACD,KAJD;AAKD;AA7BY,CAAf","sourcesContent":["import httpRequest from './httpRequest'\r\n\r\nexport default {\r\n\r\n  get (url, options, success, error) {\r\n    httpRequest.get(url, options).then(res => {\r\n      success && success(res);\r\n    }).catch(err => {\r\n      error && error(err)\r\n    })\r\n  },\r\n  post (url, options, success, error) {\r\n    httpRequest.post(url, options).then(res => {\r\n      success && success(res)\r\n    }).catch(err => {\r\n      error && error(err)\r\n    })\r\n  },\r\n  postFile (url, options, success, error) {\r\n    httpRequest.post(url, options).then(res => {\r\n      success && success(res)\r\n    }).catch(err => {\r\n      error && error(err)\r\n    })\r\n  },\r\n  put (url, options, success, error) {\r\n    httpRequest.put(url, options).then(res => {\r\n      success && success(res)\r\n    }).catch(err => {\r\n      error && error(err)\r\n    })\r\n  }\r\n}"]}]}